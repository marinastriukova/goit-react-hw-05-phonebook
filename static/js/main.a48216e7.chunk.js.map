{"version":3,"sources":["components/Phonebook.module.css","components/Form/Form.module.css","components/ContactsList/ContactsList.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/ErrorMessage/ErrorMessage.module.css","components/Section/Section.jsx","components/ErrorMessage/ErrorMessage.js","components/Form/Form.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/Phonebook.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","style","section","CSSTransition","in","appear","timeout","classNames","styles","unmountOnExit","ErrorMessage","alert","Form","state","contacts","name","number","error","handleChange","e","setState","target","value","handleSubmit","preventDefault","contact","id","uuidv4","find","toLowerCase","setTimeout","props","onAddContact","reset","localContacts","localStorage","getItem","this","JSON","parse","form","onSubmit","formLabel","type","formInput","onChange","required","formButton","Component","ContactsList","onRemove","TransitionGroup","component","list","map","items","button","onClick","Filter","onChangeFilter","label","input","Phonebook","filter","addContact","prevState","changeFilter","getVisibleContacts","includes","deleteContact","prevProps","setItem","stringify","visibleContacts","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a48216e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Phonebook_appear__Erc8L\",\"appearActive\":\"Phonebook_appearActive__UxtGP\",\"enter\":\"Phonebook_enter__UvM-M\",\"enterActive\":\"Phonebook_enterActive__oz_Od\",\"exit\":\"Phonebook_exit__1D9Om\",\"exitActive\":\"Phonebook_exitActive__3tqUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__qHwjd\",\"formLabel\":\"Form_formLabel__3dVvX\",\"formInput\":\"Form_formInput__2QnvT\",\"formButton\":\"Form_formButton__2i0nj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2fLRp\",\"item-appear\":\"ContactsList_item-appear__3WRRr\",\"item-appearActive\":\"ContactsList_item-appearActive__307bB\",\"item-enter\":\"ContactsList_item-enter__3G-wg\",\"item-enterActive\":\"ContactsList_item-enterActive__2xCuK\",\"item-exit\":\"ContactsList_item-exit__3B-du\",\"item-exitActive\":\"ContactsList_item-exitActive__11Jd7\",\"items\":\"ContactsList_items__gnGje\",\"button\":\"ContactsList_button__2UHxB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3ugH7\",\"title\":\"Section_title__hT0Lw\",\"appear\":\"Section_appear__hZXxR\",\"appearActive\":\"Section_appearActive__JTb5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3rC24\",\"input\":\"Filter_input__EAx2J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"ErrorMessage_alert__xM-XR\"};","import PropTypes from 'prop-types';\r\nimport style from './Section.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from '../Phonebook.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n    return (<div className={style.section}>\r\n        <CSSTransition in={true} appear={true} timeout={500} classNames={styles} unmountOnExit>\r\n            <h1 className={style.title}>{title}</h1>\r\n        </CSSTransition>\r\n        {children}\r\n    </div>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.any\r\n}\r\n\r\nexport default Section;","import style from './ErrorMessage.module.css';\r\n\r\nexport default function ErrorMessage() {\r\n    return <p className={style.alert}>This contact is already in phonebook</p>\r\n}","import { Component } from 'react';\r\nimport style from './Form.module.css';\r\nimport styles from '../Phonebook.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\r\n\r\nexport default class Form extends Component {\r\n\r\n    state = {\r\n        contacts: [],\r\n        name: '',\r\n        number: '',\r\n        error: null\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const localContacts = localStorage.getItem('contacts')\r\n        if (localContacts) {\r\n            this.setState(\r\n                {\r\n                    contacts: JSON.parse(localContacts)\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const contact = [\r\n            { name: this.state.name, number: this.state.number, id: uuidv4() }\r\n        ]\r\n\r\n        if (this.state.contacts.find(({ name }) => name.toLowerCase() === this.state.name.toLowerCase())) {\r\n            this.setState({ error: true })\r\n            setTimeout(() => {\r\n                this.setState({ error: false })\r\n            }, 2000)\r\n            return\r\n        } else {\r\n            this.setState({ contacts: [...this.state.contacts, ...contact] })\r\n        }\r\n\r\n        this.props.onAddContact(contact);\r\n\r\n        this.reset()\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    };\r\n\r\n    render() {\r\n        const { name, number, error } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <form className={style.form} onSubmit={this.handleSubmit}>\r\n                    <label className={style.formLabel}>\r\n                        Name\r\n                    <input\r\n                            name='name'\r\n                            type=\"text\"\r\n                            className={style.formInput}\r\n                            value={name}\r\n                            onChange={this.handleChange}\r\n                            required\r\n                        />\r\n                    </label>\r\n                    <label className={style.formLabel}>\r\n                        Number\r\n                    <input\r\n                            name='number'\r\n                            type=\"text\"\r\n                            className={style.formInput}\r\n                            value={number}\r\n                            onChange={this.handleChange}\r\n                            required\r\n                        />\r\n                    </label>\r\n                    <button type=\"submit\" className={style.formButton}>Add contact</button>\r\n                </form>\r\n                <CSSTransition in={error === true} timeout={1000} classNames={styles} unmountOnExit>\r\n                    <ErrorMessage/>\r\n                </CSSTransition>\r\n            </>\r\n        )\r\n    }\r\n}","import style from './ContactsList.module.css';\r\nimport styles from '../Phonebook.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nfunction ContactsList({ contacts, onRemove }) {\r\n\r\n    return (\r\n        <TransitionGroup component=\"ul\" className={style.list}>\r\n            {contacts.map(contact => {\r\n                return (\r\n                <CSSTransition key={contact.id} in={true} appear={true} timeout={250} classNames={styles} unmountOnExit>\r\n                    <li className={style.items}>\r\n                        <p>\r\n                            <span>{contact.name}: </span>\r\n                            <span>{contact.number}</span>\r\n                        </p>\r\n                        <button className={style.button} onClick={() => onRemove(contact.id)}>Delete</button>\r\n                    </li>\r\n                </CSSTransition>)\r\n            }\r\n            )}\r\n        </TransitionGroup>)\r\n}\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })),\r\n    onRemove: PropTypes.func\r\n}\r\n\r\nexport default ContactsList;\r\n\r\n","import style from './Filter.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Filter({value, onChangeFilter}) {\r\n    return(\r\n        <label className={style.label}>\r\n            Find contacts by name\r\n            <input \r\n            type=\"text\"\r\n            value={value}\r\n            onChange={e => onChangeFilter(e.target.value)}\r\n            className={style.input}\r\n            />\r\n        </label>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChangeFilter: PropTypes.func,\r\n  };\r\n\r\nexport default Filter","import { Component } from 'react';\r\nimport Section from './Section/Section'\r\nimport Form from './Form/Form';\r\nimport ContactsList from './ContactsList/ContactsList';\r\nimport Filter from './Filter/Filter';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport style from './Phonebook.module.css';\r\n\r\nexport default class Phonebook extends Component {\r\n\r\n    state = {\r\n        contacts: [],\r\n        filter: '',\r\n        error: ''\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const localContacts = localStorage.getItem('contacts')\r\n        if (localContacts) {\r\n            this.setState(\r\n                {\r\n                    contacts: JSON.parse(localContacts)\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.contacts !== this.state.contacts) {\r\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n        }\r\n    }\r\n\r\n\r\n    addContact = (contact) => {\r\n        this.setState(prevState => {\r\n            return {\r\n                contacts: [...prevState.contacts, ...contact]\r\n            }\r\n        })\r\n    }\r\n\r\n    changeFilter = filter => {\r\n        this.setState({ filter })\r\n    };\r\n\r\n\r\n    getVisibleContacts = () => {\r\n        const { contacts, filter } = this.state;\r\n\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n        );\r\n    };\r\n\r\n    deleteContact = id => {\r\n        this.setState({ contacts: this.state.contacts.filter(contact => contact.id !== id) });\r\n    };\r\n\r\n\r\n    render() {\r\n        const visibleContacts = this.getVisibleContacts();\r\n\r\n        return (\r\n            <div>\r\n                <Section title='Phonebook'>\r\n                    <Form onAddContact={this.addContact}></Form>\r\n                </Section>\r\n                <Section title='Contacts'>\r\n                    <CSSTransition in={visibleContacts.length > 0} timeout={250} classNames={style} unmountOnExit>\r\n                        <Filter value={this.state.filter} onChangeFilter={this.changeFilter}></Filter>\r\n                    </CSSTransition>\r\n                    <CSSTransition in={visibleContacts.length > 0} timeout={500}>\r\n                        <ContactsList contacts={visibleContacts} onRemove={this.deleteContact}></ContactsList>\r\n                    </CSSTransition>\r\n                    <CSSTransition in={visibleContacts.length <= 0} timeout={250} classNames={style} unmountOnExit>\r\n                        <p>You need to add the first contact</p>\r\n                    </CSSTransition>\r\n                </Section>\r\n            </div>\r\n        )\r\n    }\r\n}","import './App.css';\nimport Phonebook from './components/Phonebook';\n\n\nfunction App() {\n  return (\n    <>\n      <Phonebook/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}